{"ast":null,"code":"export const articleTypes = {\n  blog: \"blog_articles\",\n  project: \"project_articles\"\n};\nconst loadArticleMetadata = async (articleType, articleDirectory) => {\n  const response = await fetch(`/articles/${articleTypes[articleType]}/${articleDirectory}/metadata.json`, {\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  });\n  const metadata = await response.text();\n  console.log(\"here is metadata: \" + metadata);\n  return metadata;\n};\nexport const loadArticleMetadatas = async articleType => {\n  const response = await fetch(`/articles/${articleTypes[articleType]}/directories.json`, {\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    }\n  });\n  const articleDirectories = await response.json();\n  console.log(articleDirectories);\n  const articleMetadatas = await Promise.all(articleDirectories.map(dir => loadArticleMetadata(articleType, dir)));\n  console.log(articleMetadatas);\n  return articleMetadatas;\n};","map":{"version":3,"names":["articleTypes","blog","project","loadArticleMetadata","articleType","articleDirectory","response","fetch","headers","metadata","text","console","log","loadArticleMetadatas","articleDirectories","json","articleMetadatas","Promise","all","map","dir"],"sources":["/home/philipp/CodeProjects/Philipp-Droste.github.io/src/components/article_card_list/functions.js"],"sourcesContent":["export const articleTypes = {\n    blog: \"blog_articles\",\n    project: \"project_articles\"\n}\n\nconst loadArticleMetadata = async (articleType, articleDirectory) => {\n    const response = await fetch(`/articles/${articleTypes[articleType]}/${articleDirectory}/metadata.json`, {\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        }\n    });\n\n    const metadata = await response.text();\n    console.log(\"here is metadata: \" + metadata);\n    return metadata;\n};\n\nexport const loadArticleMetadatas = async (articleType) => {\n    const response = await fetch(`/articles/${articleTypes[articleType]}/directories.json`, {\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        }\n    });\n\n    const articleDirectories = await response.json();\n    console.log(articleDirectories);\n    const articleMetadatas = await Promise.all(articleDirectories.map(dir => loadArticleMetadata(articleType, dir)));\n    console.log(articleMetadatas);\n    return articleMetadatas\n};"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;EACxBC,IAAI,EAAE,eAAe;EACrBC,OAAO,EAAE;AACb,CAAC;AAED,MAAMC,mBAAmB,GAAG,MAAAA,CAAOC,WAAW,EAAEC,gBAAgB,KAAK;EACjE,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,aAAYP,YAAY,CAACI,WAAW,CAAE,IAAGC,gBAAiB,gBAAe,EAAE;IACrGG,OAAO,EAAE;MACL,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC;EAEF,MAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EACtCC,OAAO,CAACC,GAAG,CAAC,oBAAoB,GAAGH,QAAQ,CAAC;EAC5C,OAAOA,QAAQ;AACnB,CAAC;AAED,OAAO,MAAMI,oBAAoB,GAAG,MAAOT,WAAW,IAAK;EACvD,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,aAAYP,YAAY,CAACI,WAAW,CAAE,mBAAkB,EAAE;IACpFI,OAAO,EAAE;MACL,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC;EAEF,MAAMM,kBAAkB,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;EAChDJ,OAAO,CAACC,GAAG,CAACE,kBAAkB,CAAC;EAC/B,MAAME,gBAAgB,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACJ,kBAAkB,CAACK,GAAG,CAACC,GAAG,IAAIjB,mBAAmB,CAACC,WAAW,EAAEgB,GAAG,CAAC,CAAC,CAAC;EAChHT,OAAO,CAACC,GAAG,CAACI,gBAAgB,CAAC;EAC7B,OAAOA,gBAAgB;AAC3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}