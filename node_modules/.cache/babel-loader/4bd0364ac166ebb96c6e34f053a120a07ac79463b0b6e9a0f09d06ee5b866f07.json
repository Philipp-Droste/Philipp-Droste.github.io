{"ast":null,"code":"export const articleTypes={blog:\"blog_articles\",project:\"project_articles\"};const loadArticleMetadata=async(articleType,articleDirectory)=>{const response=await fetch(\"/articles/\".concat(articleTypes[articleType],\"/\").concat(articleDirectory,\"/metadata.json\"),{headers:{'Accept':'application/json','Content-Type':'application/json'}});const metadata=await response.json();console.log(metadata);return metadata;};export const loadArticleMetadatas=async articleType=>{const response=await fetch(\"/articles/\".concat(articleTypes[articleType],\"/directories.json\"),{headers:{'Accept':'application/json','Content-Type':'application/json'}});const articleDirectories=await response.json();console.log(articleDirectories);const articleMetadatas=await Promise.all(articleDirectories.map(dir=>loadArticleMetadata(articleType,dir)));console.log(articleMetadatas);return articleMetadatas;};","map":{"version":3,"names":["articleTypes","blog","project","loadArticleMetadata","articleType","articleDirectory","response","fetch","concat","headers","metadata","json","console","log","loadArticleMetadatas","articleDirectories","articleMetadatas","Promise","all","map","dir"],"sources":["/home/philipp/CodeProjects/Philipp-Droste.github.io/src/components/article_card_list/functions.js"],"sourcesContent":["export const articleTypes = {\n    blog: \"blog_articles\",\n    project: \"project_articles\"\n}\n\nconst loadArticleMetadata = async (articleType, articleDirectory) => {\n    const response = await fetch(`/articles/${articleTypes[articleType]}/${articleDirectory}/metadata.json`, {\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        }\n    });\n\n    const metadata = await response.json();\n    console.log(metadata);\n    return metadata;\n};\n\nexport const loadArticleMetadatas = async (articleType) => {\n    const response = await fetch(`/articles/${articleTypes[articleType]}/directories.json`, {\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        }\n    });\n\n    const articleDirectories = await response.json();\n    console.log(articleDirectories);\n    const articleMetadatas = await Promise.all(articleDirectories.map(dir => loadArticleMetadata(articleType, dir)));\n    console.log(articleMetadatas);\n    return articleMetadatas\n};"],"mappings":"AAAA,MAAO,MAAM,CAAAA,YAAY,CAAG,CACxBC,IAAI,CAAE,eAAe,CACrBC,OAAO,CAAE,kBACb,CAAC,CAED,KAAM,CAAAC,mBAAmB,CAAG,KAAAA,CAAOC,WAAW,CAAEC,gBAAgB,GAAK,CACjE,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,cAAAC,MAAA,CAAcR,YAAY,CAACI,WAAW,CAAC,MAAAI,MAAA,CAAIH,gBAAgB,mBAAkB,CACrGI,OAAO,CAAE,CACL,QAAQ,CAAE,kBAAkB,CAC5B,cAAc,CAAE,kBACpB,CACJ,CAAC,CAAC,CAEF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CACtCC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC,CACrB,MAAO,CAAAA,QAAQ,CACnB,CAAC,CAED,MAAO,MAAM,CAAAI,oBAAoB,CAAG,KAAO,CAAAV,WAAW,EAAK,CACvD,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAAC,KAAK,cAAAC,MAAA,CAAcR,YAAY,CAACI,WAAW,CAAC,sBAAqB,CACpFK,OAAO,CAAE,CACL,QAAQ,CAAE,kBAAkB,CAC5B,cAAc,CAAE,kBACpB,CACJ,CAAC,CAAC,CAEF,KAAM,CAAAM,kBAAkB,CAAG,KAAM,CAAAT,QAAQ,CAACK,IAAI,CAAC,CAAC,CAChDC,OAAO,CAACC,GAAG,CAACE,kBAAkB,CAAC,CAC/B,KAAM,CAAAC,gBAAgB,CAAG,KAAM,CAAAC,OAAO,CAACC,GAAG,CAACH,kBAAkB,CAACI,GAAG,CAACC,GAAG,EAAIjB,mBAAmB,CAACC,WAAW,CAAEgB,GAAG,CAAC,CAAC,CAAC,CAChHR,OAAO,CAACC,GAAG,CAACG,gBAAgB,CAAC,CAC7B,MAAO,CAAAA,gBAAgB,CAC3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}